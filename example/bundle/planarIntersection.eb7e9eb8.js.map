{"mappings":"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","sources":["<anon>","example/planarIntersection.js"],"sourcesContent":["var $parcel$global =\ntypeof globalThis !== 'undefined'\n  ? globalThis\n  : typeof self !== 'undefined'\n  ? self\n  : typeof window !== 'undefined'\n  ? window\n  : typeof global !== 'undefined'\n  ? global\n  : {};\nvar $parcel$modules = {};\nvar $parcel$inits = {};\n\nvar parcelRequire = $parcel$global[\"parcelRequire6c98\"];\nif (parcelRequire == null) {\n  parcelRequire = function(id) {\n    if (id in $parcel$modules) {\n      return $parcel$modules[id].exports;\n    }\n    if (id in $parcel$inits) {\n      var init = $parcel$inits[id];\n      delete $parcel$inits[id];\n      var module = {id: id, exports: {}};\n      $parcel$modules[id] = module;\n      init.call(module.exports, module, module.exports);\n      return module.exports;\n    }\n    var err = new Error(\"Cannot find module '\" + id + \"'\");\n    err.code = 'MODULE_NOT_FOUND';\n    throw err;\n  };\n\n  parcelRequire.register = function register(id, init) {\n    $parcel$inits[id] = init;\n  };\n\n  $parcel$global[\"parcelRequire6c98\"] = parcelRequire;\n}\n\nvar $ilwiq = parcelRequire(\"ilwiq\");\n\nvar $jiuw3 = parcelRequire(\"jiuw3\");\n\nvar $5Rd1x = parcelRequire(\"5Rd1x\");\n\nvar $7lx9d = parcelRequire(\"7lx9d\");\n\nvar $7ePFa = parcelRequire(\"7ePFa\");\n\nvar $kp7Te = parcelRequire(\"kp7Te\");\n\nvar $4CEV9 = parcelRequire(\"4CEV9\");\n\nvar $6KVZ3 = parcelRequire(\"6KVZ3\");\nconst $f3ed35da3fd5e58a$var$params = {\n    displayModel: true,\n    planePosition: 1\n};\nlet $f3ed35da3fd5e58a$var$renderer, $f3ed35da3fd5e58a$var$camera, $f3ed35da3fd5e58a$var$scene, $f3ed35da3fd5e58a$var$gui, $f3ed35da3fd5e58a$var$controls, $f3ed35da3fd5e58a$var$bvh;\nlet $f3ed35da3fd5e58a$var$model, $f3ed35da3fd5e58a$var$projection, $f3ed35da3fd5e58a$var$group, $f3ed35da3fd5e58a$var$plane;\nlet $f3ed35da3fd5e58a$var$outputContainer;\n$f3ed35da3fd5e58a$var$init();\nasync function $f3ed35da3fd5e58a$var$init() {\n    $f3ed35da3fd5e58a$var$outputContainer = document.getElementById(\"output\");\n    const bgColor = 0x111111;\n    // renderer setup\n    $f3ed35da3fd5e58a$var$renderer = new (0, $ilwiq.WebGLRenderer)({\n        antialias: true\n    });\n    $f3ed35da3fd5e58a$var$renderer.setPixelRatio(window.devicePixelRatio);\n    $f3ed35da3fd5e58a$var$renderer.setSize(window.innerWidth, window.innerHeight);\n    $f3ed35da3fd5e58a$var$renderer.setClearColor(bgColor, 1);\n    $f3ed35da3fd5e58a$var$renderer.clear();\n    document.body.appendChild($f3ed35da3fd5e58a$var$renderer.domElement);\n    // scene setup\n    $f3ed35da3fd5e58a$var$scene = new (0, $ilwiq.Scene)();\n    // lights\n    const light = new (0, $ilwiq.DirectionalLight)(0xffffff, 3.5);\n    light.position.set(1, 2, 3);\n    $f3ed35da3fd5e58a$var$scene.add(light);\n    const ambientLight = new (0, $ilwiq.AmbientLight)(0xb0bec5, 0.5);\n    $f3ed35da3fd5e58a$var$scene.add(ambientLight);\n    // load model\n    $f3ed35da3fd5e58a$var$group = new (0, $ilwiq.Group)();\n    $f3ed35da3fd5e58a$var$scene.add($f3ed35da3fd5e58a$var$group);\n    const gltf = await new (0, $7lx9d.GLTFLoader)().setMeshoptDecoder((0, $kp7Te.MeshoptDecoder)).loadAsync(\"https://raw.githubusercontent.com/gkjohnson/3d-demo-data/main/models/nasa-m2020/Perseverance.glb\");\n    $f3ed35da3fd5e58a$var$model = gltf.scene;\n    // generate the merged geometry\n    const geometries = [];\n    $f3ed35da3fd5e58a$var$model.updateWorldMatrix(true, true);\n    $f3ed35da3fd5e58a$var$model.traverse((c)=>{\n        if (c.geometry) {\n            const clone = c.geometry.clone();\n            clone.applyMatrix4(c.matrixWorld);\n            for(const key in clone.attributes)if (key !== \"position\") clone.deleteAttribute(key);\n            geometries.push(clone);\n        }\n    });\n    const mergedGeometry = (0, $7ePFa.mergeGeometries)(geometries, false);\n    $f3ed35da3fd5e58a$var$bvh = new (0, $6KVZ3.MeshBVH)(mergedGeometry, {\n        maxLeafTris: 1\n    });\n    // center model\n    const box = new (0, $ilwiq.Box3)();\n    box.setFromObject($f3ed35da3fd5e58a$var$model, true);\n    box.getCenter($f3ed35da3fd5e58a$var$group.position).multiplyScalar(-1);\n    $f3ed35da3fd5e58a$var$group.position.y = Math.max(0, -box.min.y) + 1;\n    $f3ed35da3fd5e58a$var$group.add($f3ed35da3fd5e58a$var$model);\n    // create plane to display the cut location\n    $f3ed35da3fd5e58a$var$plane = new (0, $ilwiq.Mesh)(new (0, $ilwiq.PlaneGeometry)(5, 5), new (0, $ilwiq.MeshBasicMaterial)({\n        color: 0x333333,\n        transparent: true,\n        opacity: 0.5,\n        side: (0, $ilwiq.DoubleSide)\n    }));\n    $f3ed35da3fd5e58a$var$plane.rotation.x = -Math.PI / 2;\n    $f3ed35da3fd5e58a$var$group.add($f3ed35da3fd5e58a$var$plane);\n    // create projection display mesh\n    $f3ed35da3fd5e58a$var$projection = new (0, $ilwiq.LineSegments)(new (0, $ilwiq.BufferGeometry)(), new (0, $ilwiq.LineBasicMaterial)({\n        color: 0xeeeeee\n    }));\n    $f3ed35da3fd5e58a$var$projection.scale.y = 0;\n    $f3ed35da3fd5e58a$var$scene.add($f3ed35da3fd5e58a$var$projection);\n    // camera setup\n    $f3ed35da3fd5e58a$var$camera = new (0, $ilwiq.PerspectiveCamera)(75, window.innerWidth / window.innerHeight, 0.01, 50);\n    $f3ed35da3fd5e58a$var$camera.position.setScalar(3.5);\n    $f3ed35da3fd5e58a$var$camera.updateProjectionMatrix();\n    // controls\n    $f3ed35da3fd5e58a$var$controls = new (0, $5Rd1x.OrbitControls)($f3ed35da3fd5e58a$var$camera, $f3ed35da3fd5e58a$var$renderer.domElement);\n    $f3ed35da3fd5e58a$var$updateLines();\n    $f3ed35da3fd5e58a$var$gui = new (0, $jiuw3.GUI)();\n    $f3ed35da3fd5e58a$var$gui.add($f3ed35da3fd5e58a$var$params, \"displayModel\");\n    $f3ed35da3fd5e58a$var$gui.add($f3ed35da3fd5e58a$var$params, \"planePosition\", 0, 2.5).onChange(()=>$f3ed35da3fd5e58a$var$updateLines());\n    $f3ed35da3fd5e58a$var$render();\n    window.addEventListener(\"resize\", function() {\n        $f3ed35da3fd5e58a$var$camera.aspect = window.innerWidth / window.innerHeight;\n        $f3ed35da3fd5e58a$var$camera.updateProjectionMatrix();\n        $f3ed35da3fd5e58a$var$renderer.setSize(window.innerWidth, window.innerHeight);\n    }, false);\n}\nfunction $f3ed35da3fd5e58a$var$updateLines() {\n    $f3ed35da3fd5e58a$var$projection.geometry.dispose();\n    const generator = new (0, $4CEV9.PlanarIntersectionGenerator)();\n    generator.plane.constant = -$f3ed35da3fd5e58a$var$params.planePosition;\n    let start, delta;\n    start = performance.now();\n    $f3ed35da3fd5e58a$var$projection.geometry = generator.generate($f3ed35da3fd5e58a$var$bvh);\n    delta = performance.now() - start;\n    $f3ed35da3fd5e58a$var$outputContainer.innerText = `${delta.toFixed(2)}ms`;\n}\nfunction $f3ed35da3fd5e58a$var$render() {\n    requestAnimationFrame($f3ed35da3fd5e58a$var$render);\n    $f3ed35da3fd5e58a$var$group.visible = $f3ed35da3fd5e58a$var$params.displayModel;\n    $f3ed35da3fd5e58a$var$projection.visible = $f3ed35da3fd5e58a$var$params.displayProjection;\n    $f3ed35da3fd5e58a$var$plane.position.y = $f3ed35da3fd5e58a$var$params.planePosition;\n    $f3ed35da3fd5e58a$var$renderer.render($f3ed35da3fd5e58a$var$scene, $f3ed35da3fd5e58a$var$camera);\n}\n\n\n//# sourceMappingURL=planarIntersection.eb7e9eb8.js.map\n","import {\n\tBox3,\n\tWebGLRenderer,\n\tScene,\n\tDirectionalLight,\n\tAmbientLight,\n\tGroup,\n\tMeshBasicMaterial,\n\tBufferGeometry,\n\tLineSegments,\n\tLineBasicMaterial,\n\tPerspectiveCamera,\n\tMesh,\n\tPlaneGeometry,\n\tDoubleSide,\n} from 'three';\nimport { GUI } from 'three/examples/jsm/libs/lil-gui.module.min.js';\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls.js';\nimport { GLTFLoader } from 'three/examples/jsm/loaders/GLTFLoader.js';\nimport { mergeGeometries } from 'three/examples/jsm/utils/BufferGeometryUtils.js';\nimport { MeshoptDecoder } from 'three/examples/jsm/libs/meshopt_decoder.module.js';\nimport { PlanarIntersectionGenerator } from '..';\nimport { MeshBVH } from 'three-mesh-bvh';\n\nconst params = {\n\tdisplayModel: true,\n\tplanePosition: 1,\n};\n\nlet renderer, camera, scene, gui, controls, bvh;\nlet model, projection, group, plane;\nlet outputContainer;\n\ninit();\n\nasync function init() {\n\n\toutputContainer = document.getElementById( 'output' );\n\n\tconst bgColor = 0x111111;\n\n\t// renderer setup\n\trenderer = new WebGLRenderer( { antialias: true } );\n\trenderer.setPixelRatio( window.devicePixelRatio );\n\trenderer.setSize( window.innerWidth, window.innerHeight );\n\trenderer.setClearColor( bgColor, 1 );\n\trenderer.clear();\n\tdocument.body.appendChild( renderer.domElement );\n\n\t// scene setup\n\tscene = new Scene();\n\n\t// lights\n\tconst light = new DirectionalLight( 0xffffff, 3.5 );\n\tlight.position.set( 1, 2, 3 );\n\tscene.add( light );\n\n\tconst ambientLight = new AmbientLight( 0xb0bec5, 0.5 );\n\tscene.add( ambientLight );\n\n\t// load model\n\tgroup = new Group();\n\tscene.add( group );\n\n\tconst gltf = await new GLTFLoader()\n\t\t.setMeshoptDecoder( MeshoptDecoder )\n\t\t.loadAsync( 'https://raw.githubusercontent.com/gkjohnson/3d-demo-data/main/models/nasa-m2020/Perseverance.glb' );\n\tmodel = gltf.scene;\n\n\t// generate the merged geometry\n\tconst geometries = [];\n\tmodel.updateWorldMatrix( true, true );\n\tmodel.traverse( c => {\n\n\t\tif ( c.geometry ) {\n\n\t\t\tconst clone = c.geometry.clone();\n\t\t\tclone.applyMatrix4( c.matrixWorld );\n\t\t\tfor ( const key in clone.attributes ) {\n\n\t\t\t\tif ( key !== 'position' ) {\n\n\t\t\t\t\tclone.deleteAttribute( key );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tgeometries.push( clone );\n\n\t\t}\n\n\t} );\n\tconst mergedGeometry = mergeGeometries( geometries, false );\n\tbvh = new MeshBVH( mergedGeometry, { maxLeafTris: 1 } );\n\n\t// center model\n\tconst box = new Box3();\n\tbox.setFromObject( model, true );\n\tbox.getCenter( group.position ).multiplyScalar( - 1 );\n\tgroup.position.y = Math.max( 0, - box.min.y ) + 1;\n\tgroup.add( model );\n\n\t// create plane to display the cut location\n\tplane = new Mesh( new PlaneGeometry( 5, 5 ), new MeshBasicMaterial( { color: 0x333333, transparent: true, opacity: 0.5, side: DoubleSide } ) );\n\tplane.rotation.x = - Math.PI / 2;\n\tgroup.add( plane );\n\n\t// create projection display mesh\n\tprojection = new LineSegments( new BufferGeometry(), new LineBasicMaterial( { color: 0xeeeeee } ) );\n\tprojection.scale.y = 0;\n\tscene.add( projection );\n\n\t// camera setup\n\tcamera = new PerspectiveCamera( 75, window.innerWidth / window.innerHeight, 0.01, 50 );\n\tcamera.position.setScalar( 3.5 );\n\tcamera.updateProjectionMatrix();\n\n\t// controls\n\tcontrols = new OrbitControls( camera, renderer.domElement );\n\n\tupdateLines();\n\n\tgui = new GUI();\n\tgui.add( params, 'displayModel' );\n\tgui.add( params, 'planePosition', 0, 2.5 ).onChange( () => updateLines() );\n\trender();\n\n\twindow.addEventListener( 'resize', function () {\n\n\t\tcamera.aspect = window.innerWidth / window.innerHeight;\n\t\tcamera.updateProjectionMatrix();\n\n\t\trenderer.setSize( window.innerWidth, window.innerHeight );\n\n\t}, false );\n\n}\n\nfunction updateLines() {\n\n\tprojection.geometry.dispose();\n\n\tconst generator = new PlanarIntersectionGenerator();\n\tgenerator.plane.constant = - params.planePosition;\n\n\tlet start, delta;\n\tstart = performance.now();\n\tprojection.geometry = generator.generate( bvh );\n\tdelta = performance.now() - start;\n\n\toutputContainer.innerText = `${ delta.toFixed( 2 ) }ms`;\n\n}\n\nfunction render() {\n\n\trequestAnimationFrame( render );\n\n\tgroup.visible = params.displayModel;\n\tprojection.visible = params.displayProjection;\n\tplane.position.y = params.planePosition;\n\trenderer.render( scene, camera );\n\n}\n"],"names":["$f3ed35da3fd5e58a$var$renderer","$f3ed35da3fd5e58a$var$camera","$f3ed35da3fd5e58a$var$scene","$f3ed35da3fd5e58a$var$gui","$f3ed35da3fd5e58a$var$bvh","$f3ed35da3fd5e58a$var$model","$f3ed35da3fd5e58a$var$projection","$f3ed35da3fd5e58a$var$group","$f3ed35da3fd5e58a$var$plane","$f3ed35da3fd5e58a$var$outputContainer","$parcel$global","globalThis","self","window","global","$parcel$modules","$parcel$inits","parcelRequire","id","exports","init","module","call","err","Error","code","register","$ilwiq","$jiuw3","$5Rd1x","$7lx9d","$7ePFa","$kp7Te","$4CEV9","$6KVZ3","$f3ed35da3fd5e58a$var$params","displayModel","planePosition","$f3ed35da3fd5e58a$var$updateLines","start","delta","geometry","dispose","generator","PlanarIntersectionGenerator","plane","constant","performance","now","generate","innerText","toFixed","$f3ed35da3fd5e58a$var$init","document","getElementById","WebGLRenderer","antialias","setPixelRatio","devicePixelRatio","setSize","innerWidth","innerHeight","setClearColor","clear","body","appendChild","domElement","Scene","light","DirectionalLight","position","set","add","ambientLight","AmbientLight","Group","gltf","GLTFLoader","setMeshoptDecoder","MeshoptDecoder","loadAsync","scene","geometries","updateWorldMatrix","traverse","c","clone","key","applyMatrix4","matrixWorld","attributes","deleteAttribute","push","mergedGeometry","mergeGeometries","MeshBVH","maxLeafTris","box","Box3","setFromObject","getCenter","multiplyScalar","y","Math","max","min","Mesh","PlaneGeometry","MeshBasicMaterial","color","transparent","opacity","side","DoubleSide","rotation","x","PI","LineSegments","BufferGeometry","LineBasicMaterial","scale","PerspectiveCamera","setScalar","updateProjectionMatrix","OrbitControls","GUI","onChange","$f3ed35da3fd5e58a$var$render","requestAnimationFrame","visible","displayProjection","render","addEventListener","aspect"],"version":3,"file":"planarIntersection.eb7e9eb8.js.map"}